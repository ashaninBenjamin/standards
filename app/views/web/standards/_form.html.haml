= simple_form_for @standard, url: url, html: {class: "form-horizontal"} do |f|
  = f.error_notification
  = f.input :name
  = f.input :parent_id, collection: @available_parents.collect {|p| [ p.for_select, p.id ] }, include_blank: false
  = f.input :number, collection: @available_numbers, include_blank: false
  = f.input :content, input_html: { class: 'ckeditor', ckeditor: {toolbar: 'My'} }
  - if f.object.persisted?
    = f.input :state_event, collection: f.object.state_transitions.map {|s| [s.human_event, s.event]}
  .form-actions
    = f.submit class: "btn btn-success"
    - if @standard.can_refrain?
      = link_to standard_event_name(:refrain), trigger_state_event_standard_path(id: @standard.link, event: :refrain), method: :put, class: 'btn btn-warning'
    - if @standard.can_activate?
      = link_to standard_event_name(:activate), trigger_state_event_standard_path(id: @standard.link, event: :activate), method: :put, class: 'btn btn-primary'
    - if @standard.can_publish?
      = link_to standard_event_name(:publish), trigger_state_event_standard_path(id: @standard.link, event: :publish), method: :put, class: 'btn btn-primary', data: {confirm: t(:sure)}
    - if @standard.can_unpublish?
      = link_to standard_event_name(:unpublish), trigger_state_event_standard_path(id: @standard.link, event: :unpublish), method: :put, class: 'btn btn-inverse', data: {confirm: t(:sure)}
    - if @standard.can_del?
      = link_to standard_event_name(:del), trigger_state_event_standard_path(id: @standard.link, event: :del), method: :put, class: 'btn btn-danger', data: {confirm: t(:sure)}
    - if f.object.persisted? && f.object.can_restore?
      = link_to t('.restore'), restore_standard_path(id: @standard.link), method: :put, class: 'btn btn-info', data: {confirm: t(:sure)}
